{"version":3,"file":"poisson.js","mappings":"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","sources":["webpack://createPoisson/webpack/universalModuleDefinition","webpack://createPoisson/webpack/bootstrap","webpack://createPoisson/webpack/runtime/define property getters","webpack://createPoisson/webpack/runtime/hasOwnProperty shorthand","webpack://createPoisson/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"createPoisson\"] = factory();\n\telse\n\t\troot[\"createPoisson\"] = factory();\n})(this, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","export default function createPoisson (options) {\n\n\n\n    // ------------------------\n    // Data\n    // ------------------------\n\n    const { width, height, distance, ratio, attempts, beforeCreate } = Object.assign({\n        width: 100,\n        height: 100,\n        distance: 10,\n        ratio: 1,\n        attempts: 20,\n        linkHorizontal: false,\n        linkVertical: false,\n        beforeCreate: point => point\n    }, options)\n\n    const radius = {\n        x: ratio > 1 ? distance * ratio : distance,\n        y: ratio > 1 ? distance : distance / ratio\n    }\n\n    const cell = {\n        width: radius.x / Math.sqrt(2),\n        height: radius.y / Math.sqrt(2)\n    }\n\n    const grid = {\n        width: Math.ceil(width / cell.width),\n        height: Math.ceil(height / cell.height),\n    }\n\n    const origin = createPoint({\n        x: Math.random() * width,\n        y: Math.random() * height\n    })\n\n\n\n    // ------------------------\n    // Storages\n    // ------------------------\n\n    const points = [];\n    const pending = [];\n    const projected = Array.from(Array(grid.width), () => new Array(grid.height))\n\n    function save (point) {\n        points.push(point);\n        pending.push(point);\n        projected[point.gridX][point.gridY] = point;\n    }\n\n    save(origin);\n\n\n\n    // ------------------------\n    // Points\n    // ------------------------\n\n    function createPoint (coords) {\n        const point = beforeCreate(coords);\n        point.gridX = Math.floor(point.x / cell.width);\n        point.gridY = Math.floor(point.y / cell.height);\n        return point;\n    }\n\n    function createPointAround (point) {\n        const a = 2 * Math.PI * Math.random();\n        const s = 1 + Math.random();\n        const x = point.x + radius.x * s * Math.cos(a);\n        const y = point.y + radius.y * s * Math.sin(a);\n        return createPoint({ x, y });\n    }\n\n\n\n    // ------------------------\n    // Helpers\n    // ------------------------\n\n    function outsideCanvas (point) {\n        return point.x < 0 || point.x > width || point.y < 0 || point.y > height;\n    }\n\n    function inEllipse (origin, point) {\n        return Math.pow(point.x - origin.x, 2) / Math.pow(radius.x, 2) + Math.pow(point.y - origin.y, 2) / Math.pow(radius.y, 2) <= 1;\n    }\n\n    function translateGridX ({ gridX }, i) {\n        let x = gridX - 2 + i;\n        let translateX = 0;\n        if (x < 0) {\n            x = x + grid.width;\n            translateX = -width\n        }\n        if (x >= grid.width) {\n            x = x - grid.width;\n            translateX = width;\n        }\n        return { x, translateX }\n    }\n\n    function hasNeighbor (point) {\n        const y1 = Math.max(point.gridY - 2, 0);\n        const y2 = Math.min(point.gridY + 2, grid.height - 1);\n        for (let i = 0; i < 5; i++) {\n            const { x, translateX } = translateGridX(point, i);\n            for (let y = y1; y <= y2; y++) {\n                let origin = projected[x][y];\n                if (!origin) continue;\n                if (translateX) origin = { ...origin, x: origin.x + translateX }\n                if (inEllipse(origin, point)) return origin;\n            }\n        }\n    }\n\n\n\n    // ------------------------\n    // Generate points\n    // ------------------------\n\n    while (pending.length) {\n        const current = pending.pop();\n        for (let i = 0; i < attempts; i++) {\n            const point = createPointAround(current);\n            if (outsideCanvas(point)) continue;\n            if (hasNeighbor(point)) continue;\n            save(point);\n        }\n    }\n\n\n\n    // ------------------------\n    // Exports\n    // ------------------------\n\n    return {\n        radius,\n        cell,\n        grid,\n        origin,\n        points\n    }\n\n\n\n}"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","createPoisson","options","width","height","distance","ratio","attempts","beforeCreate","assign","linkHorizontal","linkVertical","point","radius","x","y","cell","Math","sqrt","grid","ceil","origin","createPoint","random","points","pending","projected","Array","from","save","push","gridX","gridY","coords","floor","createPointAround","a","PI","s","cos","sin","outsideCanvas","inEllipse","pow","translateGridX","i","translateX","hasNeighbor","y1","max","y2","min","length","current","pop"],"sourceRoot":""}